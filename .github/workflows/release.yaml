#
# this workflow will move the release flagged as 'pre-release' to the release named 'latest'
#
# see ./scripts/release.sh for details
#
name: 'release (manual workflow)'

on:
  # this workflow needs to be triggered manually
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    # ensure only one pipeline is running this workflow at a time
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref }}
    steps:
      - name: Dump GitHub context
        env:
          CONTEXT: ${{ toJson(github) }}
          JOB_CONTEXT: ${{ toJson(job) }}
          STEPS_CONTEXT: ${{ toJson(steps) }}
          RUNNER_CONTEXT: ${{ toJson(runner) }}
          STRATEGY_CONTEXT: ${{ toJson(strategy) }}
          MATRIX_CONTEXT: ${{ toJson(matrix) }}
        run: |
          cat << EOF
          ####### 'github' #######
          $CONTEXT
          ####### 'job' #######
          $JOB_CONTEXT"
          ###### 'steps' #######
          $STEPS_CONTEXT
          ###### 'runner' #######
          $RUNNER_CONTEXT
          ###### 'strategy' #######
          $STRATEGY_CONTEXT
          ###### 'matrix' #######
          $MATRIX_CONTEXT
          ###### environment #######
          $(env | grep GITHUB)
          EOF
      # only run on main branch
      - name: Check branch
        if: github.event.branch != 'main'
        run: |
          echo "::error::Workflow can only be run on branch 'main'"
          exit 1

      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          branch: github.event.branch

      - name: release
        run: |
          export GITHUB_TOKEN="${{ secrets.GITHUB_TOKEN }}"
          export GCHAT_RELEASE_ANNOUNCEMENTS_WEBHOOK="${{ secrets.GCHAT_RELEASE_ANNOUNCEMENTS_WEBHOOK }}"

          pnpm release

